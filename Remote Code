//Remote Code

#include <esp_now.h> //esp now library
#include <WiFi.h>
#include <Adafruit_MPU6050.h>//MPU library
#include <Adafruit_Sensor.h>
#include <Wire.h>

Adafruit_MPU6050 mpu;
uint8_t broadcastAddress[] = {0x08, 0xF9, 0xE0, 0xEC, 0xE5, 0x30};//mac address of receiver
const int left = 25;
const int right = 14;
const int slow = 32;
char c;//variable to be sent to receiver
esp_now_peer_info_t peerInfo;
void OnDataSent(const uint8_t *mac_addr, esp_now_send_status_t status) {
  Serial.print("\r\nLast Packet Send Status:\t");
  Serial.println(status == ESP_NOW_SEND_SUCCESS ? "Delivery Success" : "Delivery Fail");
}
void setup() {
  WiFi.mode(WIFI_STA);
  Serial.begin(115200);
  // Init ESP-NOW
  if (esp_now_init() != ESP_OK) {
    Serial.println("Error initializing ESP-NOW");
    return;
  }

  // Once ESPNow is successfully Init, we will register for Send CB to
  //Get the status of Transmitted packet
  esp_now_register_send_cb(OnDataSent);
  
  // Register peer
  memcpy(peerInfo.peer_addr, broadcastAddress, 6);
  peerInfo.channel = 0;  
  peerInfo.encrypt = false;
  
  // Add peer        
  if (esp_now_add_peer(&peerInfo) != ESP_OK){
    Serial.println("Failed to add peer");
    return;
  }
  Serial.begin(115200);
  while (!Serial)
    delay(10); // will pause Zero, Leonardo, etc until serial console opens

  Serial.println("Adafruit MPU6050 test!");

  if (!mpu.begin()) {
    Serial.println("Failed to find MPU6050 chip");
    while (1) {
      delay(10);
    }
  }
  Serial.println("MPU6050 Found!");

  mpu.setAccelerometerRange(MPU6050_RANGE_8_G);

  mpu.setGyroRange(MPU6050_RANGE_500_DEG);

  mpu.setFilterBandwidth(MPU6050_BAND_21_HZ);

  pinMode(left,INPUT_PULLDOWN);
  pinMode(right,INPUT_PULLDOWN);
  pinMode(slow,INPUT_PULLDOWN);
}

void loop() {

  sensors_event_t a, g, temp;
  mpu.getEvent(&a, &g, &temp);
  float zg = g.gyro.z-0.02;
  float xg = g.gyro.x;
  float xaa = a.acceleration.x;
  int l = digitalRead(left);
  int r = digitalRead(right);
  int s = digitalRead(slow);

  delay(10);
  float xab = a.acceleration.x;
  //all threshold are only for hand movements
  if((l == LOW && r == HIGH && s == LOW)||(xg > 3 && xg<8) || (zg<-3 ))
  {
    c = 'r';
  }
  else if((l == HIGH && r == LOW && s == LOW)||(xg<-3 && xg>-8) || zg> 3 )
  {
    c ='l';
  }
  else if((l == LOW && r == LOW && s == HIGH)||(xaa <-3||xab<-3||(xaa-xab)>6))
    c = 's';
  else if( xg>8 || xg <-8)
    c ='f';
  else {c ='n';}
  Serial.print(xg);
  Serial.print(" "); 
  Serial.print(zg); 
  Serial.println("");
  esp_err_t result = esp_now_send(broadcastAddress, (uint8_t *) &c, sizeof(c));
   
  Serial.println(c);
}
